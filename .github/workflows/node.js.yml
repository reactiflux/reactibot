name: Node.js CI
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Tag Build
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          # push: ${{ github.event_name != 'pull_request' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deployment:
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/feature/actions'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Update server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          key: ${{ secrets.SSH_KEY }}
          envs: GITHUB_HEAD_REF
          script: |
            cd reactibot
            sudo git config --global url."https://".insteadOf git://
            sudo git config --global url."https://github.com/".insteadOf git@github.com
            sudo git checkout $GITHUB_HEAD_REF
            sudo git pull
      - name: Build image server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd reactibot
            sudo docker build -t reactiflux/reactibot:latest .

      - name: Start server
        uses: appleboy/ssh-action@master
        env:
          AMPLITUDE_KEY: ${{ secrets.AMPLITUDE_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISCORD_HASH: ${{ secrets.DISCORD_HASH }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          key: ${{ secrets.SSH_KEY }}
          envs: AMPLITUDE_KEY,GITHUB_TOKEN,DISCORD_HASH
          script: |
            sudo docker container stop $(sudo docker container ls -aq)
            sudo docker container rm $(sudo docker container ls -aq)
            sudo docker image prune -f
            sudo docker run -d -e ENVIRONMENT=production -e AMPLITUDE_KEY=$AMPLITUDE_KEY -e GITHUB_TOKEN=$GITHUB_TOKEN -e DISCORD_HASH=$DISCORD_HASH reactiflux/reactibot:latest

      - name: Deploy Discord commands
        uses: appleboy/ssh-action@master
        env:
          DISCORD_HASH: ${{ secrets.DISCORD_HASH }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          key: ${{ secrets.SSH_KEY }}
          envs: DISCORD_HASH
          script: |
            sudo docker run -e ENVIRONMENT=production -e DISCORD_HASH=$DISCORD_HASH reactiflux/reactibot:latest yarn start:commands
