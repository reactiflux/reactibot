apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: reactibot
spec:
  selector:
    matchLabels:
      app: reactibot
  serviceName: "reactibot-service"
  replicas: 1
  template:
    metadata:
      labels:
        app: reactibot
    spec:
      containers:
        - name: reactibot
          image: $(IMAGE)
          env:
            - name: ENVIRONMENT
              value: production
            - name: DISCORD_HASH
              valueFrom:
                secretKeyRef:
                  name: reactibot-env
                  key: DISCORD_HASH
            - name: GH_READ_TOKEN
              valueFrom:
                secretKeyRef:
                  name: reactibot-env
                  key: GH_READ_TOKEN
            - name: AMPLITUDE_KEY
              valueFrom:
                secretKeyRef:
                  name: reactibot-env
                  key: AMPLITUDE_KEY
            - name: DISCORD_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: reactibot-env
                  key: DISCORD_PUBLIC_KEY
            - name: DISCORD_APP_ID
              valueFrom:
                secretKeyRef:
                  name: reactibot-env
                  key: DISCORD_APP_ID
            - name: GUILD_ID
              valueFrom:
                secretKeyRef:
                  name: reactibot-env
                  key: GUILD_ID
            - name: OPENAI_KEY
              valueFrom:
                secretKeyRef:
                  name: reactibot-env
                  key: OPENAI_KEY
            - name: REACTIBOT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: reactibot-env
                  key: REACTIBOT_API_KEY
          volumeMounts:
            - name: reactibot-data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: reactibot-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "standard"
        resources:
          requests:
            storage: 1Gi
